{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/deshi/code/ShkoloProj/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useContext } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Expo, { Constants } from 'expo';\nimport ConstantsExpo from \"expo-constants\";\nexport default function App() {\n  var _this = this;\n\n  var appId = ConstantsExpo.manifest.extra.facebook.appId;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      responseJson = _useState2[0],\n      setResponseJson = _useState2[1];\n\n  var callGraph = function callGraph(token) {\n    var response, responseJSON;\n    return _regeneratorRuntime.async(function callGraph$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token + \"&fields=id,name,email,about,picture\"));\n\n          case 2:\n            response = _context.sent;\n            _context.t0 = JSON;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            _context.t1 = _context.sent;\n            responseJSON = _context.t0.stringify.call(_context.t0, _context.t1);\n\n            _this.setState({\n              responseJSON: responseJSON\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var login = function login() {\n    var _await$Expo$Facebook$, type, token;\n\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Expo.Facebook.logInWithReadPermissionsAsync('YOUR_ID_HERE :)', {\n              permissions: ['public_profile', 'email', 'user_friends']\n            }));\n\n          case 2:\n            _await$Expo$Facebook$ = _context2.sent;\n            type = _await$Expo$Facebook$.type;\n            token = _await$Expo$Facebook$.token;\n\n            if (type === 'success') {\n              _this.callGraph(token);\n\n              _this.firebaseLogin(token);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return _this.login();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '50%',\n        alignSelf: 'center',\n        borderRadius: 4,\n        padding: 24,\n        backgroundColor: '#3B5998'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Login to Facebook\")));\n  };\n\n  var renderValue = function renderValue(value) {\n    return React.createElement(Text, {\n      key: value,\n      style: styles.paragraph,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, value);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Button, {\n    title: \"Change text\",\n    onPress: function onPress() {\n      return console.log(appId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/deshi/code/ShkoloProj/App.js"],"names":["StatusBar","React","useEffect","useState","useContext","Expo","Constants","ConstantsExpo","App","appId","manifest","extra","facebook","responseJson","setResponseJson","callGraph","token","fetch","response","JSON","json","responseJSON","stringify","setState","login","Facebook","logInWithReadPermissionsAsync","permissions","type","firebaseLogin","renderButton","width","alignSelf","borderRadius","padding","backgroundColor","color","fontWeight","renderValue","value","styles","paragraph","container","console","log","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport React, {useEffect, useState, useContext} from 'react';\nimport {\n  Button,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  View,\n  StyleSheet\n} from 'react-native';\nimport Expo, { Constants } from 'expo';\nimport ConstantsExpo from \"expo-constants\";\n\n\nexport default function App() {\n  const appId = ConstantsExpo.manifest.extra.facebook.appId;\n\n  const [responseJson, setResponseJson] = useState(null);\n\n  const callGraph = async token => {\n    /// Look at the fields... I don't have an `about` on my profile but everything else should get returned.\n    const response = await fetch(\n      `https://graph.facebook.com/me?access_token=${token}&fields=id,name,email,about,picture`\n    );\n    const responseJSON = JSON.stringify(await response.json());\n    this.setState({ responseJSON });\n  };\n\n  const login = async () => {\n    const {\n      type,\n      token,\n    } = await Expo.Facebook.logInWithReadPermissionsAsync('YOUR_ID_HERE :)', {\n      permissions: ['public_profile', 'email', 'user_friends'],\n    });\n\n    if (type === 'success') {\n      this.callGraph(token);\n\n      this.firebaseLogin(token);\n    }\n  };\n\n  const renderButton = () => (\n    <TouchableOpacity onPress={() => this.login()}>\n      <View\n        style={{\n          width: '50%',\n          alignSelf: 'center',\n          borderRadius: 4,\n          padding: 24,\n          backgroundColor: '#3B5998',\n        }}>\n        <Text style={{ color: 'white', fontWeight: 'bold' }}>\n          Login to Facebook\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n const renderValue = value => (\n    <Text key={value} style={styles.paragraph}>{value}</Text>\n  );\n\n  // const initSocialLogin = async () => {\n  //   try {\n  //     await Facebook.initializeAsync(FB_APP_ID);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n  // useEffect(() => {\n  //   initSocialLogin();\n  // }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Button title=\"Change text\" onPress={() => console.log(appId)}/>\n      <StatusBar style=\"auto\"/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}